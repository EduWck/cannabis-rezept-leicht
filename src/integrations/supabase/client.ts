
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://fuxikzjnptutswjrfmog.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImZ1eGlrempucHR1dHN3anJmbW9nIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDcyMjU3MDUsImV4cCI6MjA2MjgwMTcwNX0.TMydOAVAot8O1-4Ae4jN73p-Z49oR6eXwob6_ObnjHM";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Helper function for running the test users edge function
export async function createTestUsers() {
  try {
    const { data, error } = await supabase.functions.invoke('create-test-users');
    
    if (error) {
      throw error;
    }
    
    return data;
  } catch (error) {
    console.error('Error creating test users:', error);
    throw error;
  }
}

// Helper function for creating test data
export async function createTestData() {
  try {
    // First, check if test user exists
    const { data: patientProfile, error: profileError } = await supabase
      .from("profiles")
      .select("id")
      .eq("email", "patient@example.com")
      .single();
      
    if (profileError) {
      console.error("Error checking for test user:", profileError);
      throw profileError;
    }
    
    if (!patientProfile) {
      throw new Error("Test user not found. Please create test users first.");
    }
    
    // Create test prescriptions
    const { data: prescriptionData, error: prescriptionError } = await supabase
      .from("prescriptions")
      .insert([
        {
          patient_id: patientProfile.id,
          status: "in_review",
          symptoms: ["Schlaflosigkeit", "Schmerzen"]
        },
        {
          patient_id: patientProfile.id,
          status: "approved",
          symptoms: ["Angstzustände", "Übelkeit"]
        },
        {
          patient_id: patientProfile.id,
          status: "rejected",
          rejection_reason: "Unzureichende medizinische Begründung",
          symptoms: ["Kopfschmerzen"]
        }
      ])
      .select();
      
    if (prescriptionError) {
      console.error("Error creating test prescriptions:", prescriptionError);
      throw prescriptionError;
    }
    
    // Find the approved prescription for orders
    const approvedPrescription = prescriptionData.find(p => p.status === "approved");
    
    if (!approvedPrescription) {
      throw new Error("No approved prescription found.");
    }
    
    // Create test orders
    const { error: orderError } = await supabase
      .from("orders")
      .insert([
        {
          patient_id: patientProfile.id,
          prescription_id: approvedPrescription.id,
          status: "pending",
          total_amount: 149.99,
          shipping_address: {
            street: "Musterstraße 123",
            postal_code: "10115",
            city: "Berlin",
            country: "Deutschland"
          }
        },
        {
          patient_id: patientProfile.id,
          prescription_id: approvedPrescription.id,
          status: "processing",
          total_amount: 99.95,
          shipping_address: {
            street: "Musterstraße 123",
            postal_code: "10115",
            city: "Berlin",
            country: "Deutschland"
          }
        },
        {
          patient_id: patientProfile.id,
          prescription_id: approvedPrescription.id,
          status: "shipped",
          total_amount: 79.90,
          shipping_address: {
            street: "Musterstraße 123",
            postal_code: "10115",
            city: "Berlin",
            country: "Deutschland"
          }
        }
      ]);
      
    if (orderError) {
      console.error("Error creating test orders:", orderError);
      throw orderError;
    }
    
    return { success: true };
  } catch (error) {
    console.error("Error creating test data:", error);
    throw error;
  }
}
